name: Unit Tests

on:
  push:
    branches: [ main, master, refactor/functional-patterns ]
  pull_request:
    branches: [ main, master, refactor/functional-patterns ]

jobs:
  unit-tests:
    name: Unit Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install test dependencies first
          pip install pytest pytest-cov coverage
          # Install minimal dependencies needed for unit tests (core ML/vision libs)
          pip install numpy torch torchvision opencv-python-headless pandas pillow einops
          # Install other requirements from requirements.txt
          pip install numexpr matplotlib av pims imageio_ffmpeg rich gdown easydict
          echo "Installed packages:"
          pip list

      - name: Run unit tests
        run: |
          # Run only unit tests with coverage (integration tests explicitly ignored)
          pytest tests/unit/ -v --tb=short --ignore=tests/integration --junitxml=test-results.xml --cov=deforum/utils --cov-report=term --cov-report=html --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: test-results.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results.xml
          check_name: Unit Test Results (Python ${{ matrix.python-version }})
